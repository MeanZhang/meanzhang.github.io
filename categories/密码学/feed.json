{
    "version": "https://jsonfeed.org/version/1",
    "title": "Mean 个人博客 • All posts by \"密码学\" category",
    "description": "Mean 个人博客",
    "home_page_url": "https://blog.meancoder.xyz",
    "items": [
        {
            "id": "https://blog.meancoder.xyz/2020/RSA-given-e-d-n-factorize-n/",
            "url": "https://blog.meancoder.xyz/2020/RSA-given-e-d-n-factorize-n/",
            "title": "RSA 已知 e，d 和 n，分解 N",
            "date_published": "2020-05-18T14:07:38.000Z",
            "content_html": "<p>这次的密码学实验有一个已知 <span\nclass=\"math inline\"><em>e</em></span> ， <span\nclass=\"math inline\"><em>d</em></span> 和 <span\nclass=\"math inline\"><em>N</em></span> ，分解 <span\nclass=\"math inline\"><em>N</em></span>\n的问题，想了很久（其实没想多久，试了一下就放弃了），然后就到网上找资料。找到了一个很好用的网站，<a\nhref=\"https://www.di-mgt.com.au/index.html\">DI Management\nHome</a>，都是关于密码学的，里面就有关于这个问题的算法<a href=\"#fn1\"\nclass=\"footnote-ref\" id=\"fnref1\"\nrole=\"doc-noteref\"><sup>1</sup></a>。</p>\n<span id=\"more\"></span>\n<blockquote>\n<p>Initially we compute <span\nclass=\"math inline\"><em>k</em> = <em>d</em><em>e</em> − 1</span> . We\nthen choose a random integer <span class=\"math inline\"><em>g</em></span>\nin the range <span\nclass=\"math inline\">1 &lt; <em>g</em> &lt; <em>N</em></span> . Now <span\nclass=\"math inline\"><em>k</em></span> is an even number, where <span\nclass=\"math inline\"><em>k</em> = 2<sup><em>t</em></sup><em>r</em></span>\nwith <span class=\"math inline\"><em>r</em></span> odd and <span\nclass=\"math inline\"><em>t</em> ≥ 1</span> , so we can compute <span\nclass=\"math inline\"><em>x</em> = <em>g</em><sup><em>k</em>/2</sup>, <em>g</em><sup><em>k</em>/4</sup>, …, <em>g</em><sup><em>k</em>/2<sup><em>t</em></sup></sup> (mod  <em>N</em>)</span>\nuntil <span class=\"math inline\"><em>x</em> &gt; 1</span> and <span\nclass=\"math inline\"><em>y</em> = gcd (<em>x</em>−1,<em>N</em>) &gt; 1</span>\n. If so, then one of our factors, say <span\nclass=\"math inline\"><em>p</em></span> , is equal to <span\nclass=\"math inline\"><em>y</em></span> , and the other is <span\nclass=\"math inline\"><em>q</em> = <em>N</em>/<em>y</em></span> and we are\ndone. If we don’t find a solution, then we choose another random <span\nclass=\"math inline\"><em>g</em></span> .</p>\n<p>DI Management - <em><a\nhref=\"https://www.di-mgt.com.au/rsa_factorize_n.html\">RSA: how to\nfactorize N given d</a></em></p>\n</blockquote>\n<p>简单翻译一下：</p>\n<blockquote>\n<p>首先我们计算 <span\nclass=\"math inline\"><em>k</em> = <em>d</em><em>e</em> − 1</span>\n。然后选择一个随机数 <span class=\"math inline\"><em>g</em></span> ，满足\n<span class=\"math inline\">1 &lt; <em>g</em> &lt; <em>N</em></span> 。\n<span class=\"math inline\"><em>k</em></span> 是偶数，所以 <span\nclass=\"math inline\"><em>k</em> = 2<sup><em>t</em></sup><em>r</em></span>\n，其中 <span class=\"math inline\"><em>r</em></span> 是奇数且 <span\nclass=\"math inline\"><em>t</em> ≥ 1</span> ，然后计算 <span\nclass=\"math inline\"><em>x</em> = <em>g</em><sup><em>k</em>/2</sup>, <em>g</em><sup><em>k</em>/4</sup>, …, <em>g</em><sup><em>k</em>/2<sup><em>t</em></sup></sup> (mod  <em>N</em>)</span>，直到\n<span class=\"math inline\"><em>x</em> &gt; 1</span> 且 <span\nclass=\"math inline\"><em>y</em> = gcd (<em>x</em>−1,<em>N</em>) &gt; 1</span>\n。 如果这样的 <span class=\"math inline\"><em>y</em></span>\n存在，那么其中一个因子 <span class=\"math inline\"><em>p</em></span> 等于\n<span class=\"math inline\"><em>y</em></span> ，并且 <span\nclass=\"math inline\"><em>q</em> = <em>N</em>/<em>y</em></span>\n，这样就完成了。如果这样的 <span class=\"math inline\"><em>y</em></span>\n不存在，就重新生成随机数 <span class=\"math inline\"><em>g</em></span>\n。</p>\n</blockquote>\n<p>下面是我的代码，对原算法稍微进行了一点改动。原算法是先计算出 <span\nclass=\"math inline\"><em>t</em></span> 和 <span\nclass=\"math inline\"><em>r</em></span> ，然后依次计算 <span\nclass=\"math inline\"><em>x</em> = <em>g</em><sup><em>k</em>/2<sup><em>i</em></sup></sup></span>\n。这里我不计算 <span class=\"math inline\"><em>t</em></span> 和 <span\nclass=\"math inline\"><em>r</em></span> ，而是只要 <span\nclass=\"math inline\"><em>k</em></span> 是偶数，就将其除以 2，然后计算\n<span\nclass=\"math inline\"><em>x</em> = <em>g</em><sup><em>k</em></sup></span>\n并判断是否满足条件。这样可以减少一些计算，但是由于 <span\nclass=\"math inline\"><em>t</em></span> 并不大，所以减少的计算有限。</p>\n<p>完整代码见<a href=\"https://github.com/MeanZhang/RSA\">MeanZhang/RSA:\nRSA-Java</a>。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 已知e，d，n，分解n</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> e 公钥e</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> d 私钥d</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> n 模数n</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> p，q</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> BigInteger[] attack(BigInteger e, BigInteger d, BigInteger n) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// p,q</span></span><br><span class=\"line\">    BigInteger[] result = <span class=\"keyword\">new</span> <span class=\"title class_\">BigInteger</span>[<span class=\"number\">2</span>];</span><br><span class=\"line\">    <span class=\"comment\">// k=de-1</span></span><br><span class=\"line\">    <span class=\"type\">BigInteger</span> <span class=\"variable\">k</span> <span class=\"operator\">=</span> d.multiply(e).subtract(BigInteger.ONE);</span><br><span class=\"line\">    <span class=\"type\">Random</span> <span class=\"variable\">random</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Random</span>();</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (<span class=\"literal\">true</span>) &#123;</span><br><span class=\"line\">        <span class=\"type\">BigInteger</span> <span class=\"variable\">g</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">BigInteger</span>(n.bitLength(), random);</span><br><span class=\"line\">        <span class=\"comment\">// 选择随机数g，1&lt;g&lt;n</span></span><br><span class=\"line\">        <span class=\"keyword\">while</span> (g.compareTo(BigInteger.ONE) &lt;= <span class=\"number\">0</span> || g.compareTo(n) &gt;= <span class=\"number\">0</span>)</span><br><span class=\"line\">            g = <span class=\"keyword\">new</span> <span class=\"title class_\">BigInteger</span>(n.bitLength(), random);</span><br><span class=\"line\">        <span class=\"type\">BigInteger</span> <span class=\"variable\">k1</span> <span class=\"operator\">=</span> k;</span><br><span class=\"line\">        <span class=\"comment\">// 计算t和g^(k/2^i)的过程合在一起</span></span><br><span class=\"line\">        <span class=\"keyword\">while</span> (k1.mod(BigInteger.TWO).equals(BigInteger.ZERO)) &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 如果k为偶数，就除以2</span></span><br><span class=\"line\">            k1 = k1.shiftRight(<span class=\"number\">1</span>);</span><br><span class=\"line\">            <span class=\"comment\">// 此时g^(k/2^i)=g^k1</span></span><br><span class=\"line\">            <span class=\"type\">BigInteger</span> <span class=\"variable\">x</span> <span class=\"operator\">=</span> g.modPow(k1, n);</span><br><span class=\"line\">            <span class=\"comment\">// 计算y=gcd(x−1,n)，直接赋值给p(result[0])</span></span><br><span class=\"line\">            result[<span class=\"number\">0</span>] = x.subtract(BigInteger.ONE).gcd(n);</span><br><span class=\"line\">            <span class=\"comment\">// 如果x&gt;1且y=gcd(x−1,n)&gt;1</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (x.compareTo(BigInteger.ONE) &gt; <span class=\"number\">0</span> &amp;&amp; result[<span class=\"number\">0</span>].compareTo(BigInteger.ONE) &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">                result[<span class=\"number\">1</span>] = n.divide(result[<span class=\"number\">0</span>]);</span><br><span class=\"line\">                <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>测试数据：</p>\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">e:</span><br><span class=\"line\">65537</span><br><span class=\"line\">d:</span><br><span class=\"line\">13085102850405329895940153649208766646679432053055210927814587187939575969334380946175257120108607885616731724467899991987963542311668962802613624160423864736904359544115910805381019345850330276964971412664144174157825068713331109139842487999112829255389047329358923488846912437792391102853729375052922599258215311601018992134762683570752403675370812499995354701024990414541327012769030147878934713424171374951602988478984432403148854042370903764361797455965930292322795814453835335323397068237664481359506461188857661605832041501219728374514303209642746672993156029099655958158717907546664548938973389857200804582177</span><br><span class=\"line\">n:</span><br><span class=\"line\">21378032245774894186324720788457768851857953294637267751313371903474996018902810092972224806315945430514626988743400353365786674788848003569698586194388463460699531620948408197942261177369324808332585418351947368544183614904162658914539989430070735676083960582943505227316151479174351490943931346982185481068889458087344890907035731467000101100009111593455801160870652558847164438348031498067369123608755518383163346962891967964682970251625764813457371461595048927486942272152822570449609158417324070867001419543608370026546341531367233199832189762919523227554947408242727690461831545997600374969434706782376320559561</span><br><span class=\"line\">p:</span><br><span class=\"line\">134015724574231629415725856596339106132655429815809390083191653420751276014515665041469448212111089978027787330894345961709429696830117657137052704491606694791519141111894965847240833879740293408266251425861598011543042632576624378597158795956174622709934079034648552634466265913328434606944071200422868130573</span><br><span class=\"line\">q:</span><br><span class=\"line\">159518834925475861956097917917341301031640418209579419960447972340833353891477422457476074816300423813142613130845835933143395284444599641612757310435466623981281701817688676270876235464147642571713805328342460087461430626730047957682558277868352127107752854583156354513612089006699159193484825862868615965357</span><br></pre></td></tr></table></figure>\n<h2 id=\"参考资料\">参考资料</h2>\n<aside id=\"footnotes\" class=\"footnotes footnotes-end-of-document\"\nrole=\"doc-endnotes\">\n<hr />\n<ol>\n<li id=\"fn1\"><p><a\nhref=\"https://www.di-mgt.com.au/rsa_factorize_n.html\">RSA: how to\nfactorize N given d</a><a href=\"#fnref1\" class=\"footnote-back\"\nrole=\"doc-backlink\">↩︎</a></p></li>\n</ol>\n</aside>\n",
            "tags": [
                "密码学",
                "RSA",
                "抽象代数"
            ]
        },
        {
            "id": "https://blog.meancoder.xyz/2020/cryptography-and-network-security-problem-8.2/",
            "url": "https://blog.meancoder.xyz/2020/cryptography-and-network-security-problem-8.2/",
            "title": "密码编码学与网络安全第七版习题 8.2",
            "date_published": "2020-04-18T11:37:12.000Z",
            "content_html": "<p>这道题是密码学的作业，开始不会写，答案只有结果而没有过程，后来查了一些资料才算是搞明白了。</p>\n<p>题目如下：</p>\n<blockquote>\n<ol type=\"a\">\n<li>下述的伪随机数发生器可获得的最大周期是多少？</li>\n</ol>\n<p><span\nclass=\"math display\"><em>X</em><sub><em>n</em> + 1</sub> = (<em>a</em><em>X</em><sub><em>n</em></sub>) mod  2<sup>4</sup></span></p>\n<ol start=\"2\" type=\"a\">\n<li><p>这时 a 为多少？</p></li>\n<li><p>对种子有什么要求？</p></li>\n</ol>\n</blockquote>\n<span id=\"more\"></span>\n<p>解答如下：</p>\n<h2 id=\"a\">(a)</h2>\n<blockquote>\n<p>首先引入这样一个结论：对任意的奇数<span\nclass=\"math inline\"><em>a</em></span>与正整数<span\nclass=\"math inline\"><em>n</em></span>，有：<span\nclass=\"math inline\"><em>a</em><sup>2<sup><em>n</em></sup></sup> ≡ 1 (mod  2<sup><em>n</em> + 2</sup>)</span>。用归纳法证明这个结论：</p>\n<ol type=\"1\">\n<li><p>当<span\nclass=\"math inline\"><em>n</em> = 1</span>时，存在整数<span\nclass=\"math inline\"><em>b</em></span>，<span\nclass=\"math inline\"><em>c</em></span>，使得</p>\n<p><span\nclass=\"math display\"><em>a</em><sup>2<sup><em>n</em></sup></sup> = (2<em>b</em>+1)<sup>2</sup> = 4<em>b</em>(<em>b</em>+1) + 1 = 2<sup>3</sup><em>c</em> + 1 ≡ 1 (mod  2<sup>3</sup>)</span></p></li>\n<li><p>假设当<span\nclass=\"math inline\"><em>n</em> = <em>k</em></span>时，命题成立，即</p>\n<p><span\nclass=\"math display\"><em>a</em><sup>2<sup><em>k</em></sup></sup> ≡ 1 (mod  2<sup><em>k</em> + 2</sup>)</span></p>\n<p>则存在整数<span class=\"math inline\"><em>c</em></span>，使得</p>\n<p><span\nclass=\"math display\"><em>a</em><sup>2<sup><em>k</em></sup></sup> = 2<sup><em>k</em> + 2</sup><em>c</em> + 1</span></p>\n<p>当<span\nclass=\"math inline\"><em>n</em> = <em>k</em> + 1</span>时，存在整数<span\nclass=\"math inline\"><em>k</em></span>，<span\nclass=\"math inline\"><em>b</em></span>，使得</p>\n<p><span\nclass=\"math display\"><em>a</em><sup>2<sup><em>k</em> + 1</sup></sup> = (2<sup><em>k</em> + 2</sup><em>c</em>+1)<sup>2</sup> = 2<sup>2<em>k</em> + 4</sup><em>c</em><sup>2</sup> + 2 · 2<sup><em>k</em> + 2</sup><em>c</em> + 1 = 2<sup><em>k</em> + 3</sup><em>c</em>(2<sup><em>k</em> + 1</sup><em>c</em>+1) + 1 ≡ 1 (mod  2<sup><em>k</em> + 3</sup>)</span></p>\n<p>即当<span\nclass=\"math inline\"><em>n</em> = <em>k</em> + 1</span>时，命题成立。</p></li>\n</ol>\n<p>由 1，2 可得，该命题成立。</p>\n</blockquote>\n<p>若<span class=\"math inline\"><em>a</em></span>与<span\nclass=\"math inline\">2<sup>4</sup></span>不互素，即<span\nclass=\"math inline\"><em>a</em></span>为偶数，令<span\nclass=\"math inline\"><em>a</em> = 2<em>k</em></span>，则</p>\n<p><span\nclass=\"math display\"><em>a</em><sup>4</sup> = 16<em>k</em><sup>4</sup> ≡ 0 (mod  2<sup>4</sup>)</span></p>\n<p>从而</p>\n<p><span\nclass=\"math display\">0 = <em>X</em><sub><em>n</em> + 4</sub> ≡ <em>a</em><sup>4</sup><em>X</em><sub><em>n</em></sub> (mod  2<sup>4</sup>)</span></p>\n<p>产生的第四个数之后全为 0，所以<span\nclass=\"math inline\"><em>a</em></span>与<span\nclass=\"math inline\">2<sup>4</sup></span>互素。</p>\n<p>又因为</p>\n<p><span\nclass=\"math display\"><em>a</em><sup>2<sup><em>n</em></sup></sup> ≡ 1 (mod  2<sup><em>n</em> + 2</sup>)</span></p>\n<p>所以</p>\n<p><span\nclass=\"math display\"><em>a</em><sup>2<sup>4 − 2</sup></sup> = <em>a</em><sup>4</sup> ≡ 1 (mod  2<sup>4</sup>)</span></p>\n<p>从而</p>\n<p><span\nclass=\"math display\"><em>a</em><sup>4</sup><em>X</em><sub><em>n</em></sub> ≡ <em>X</em><sub><em>n</em></sub> (mod  2<sup>4</sup>)</span></p>\n<p>即</p>\n<p><span\nclass=\"math display\"><em>X</em><sub><em>n</em> + 4</sub> = <em>X</em><sub><em>n</em></sub></span></p>\n<p>所以最大周期为 4。</p>\n<h2 id=\"b\">(b)</h2>\n<p>由(a)可知，<span class=\"math inline\"><em>a</em></span>为奇数。</p>\n<p>经计算，<span\nclass=\"math inline\"><em>a</em> = 7, 9, 15</span>时，周期为 2。</p>\n<p><span class=\"math inline\"><em>a</em> = 3, 5, 11, 13</span>时，周期为\n4。</p>\n<h2 id=\"c\">(c)</h2>\n<p>种子必须为奇数，否则周期会不大于 2。</p>\n",
            "tags": [
                "密码学"
            ]
        }
    ]
}