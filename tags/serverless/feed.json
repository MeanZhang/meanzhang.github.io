{
    "version": "https://jsonfeed.org/version/1",
    "title": "Mean 个人博客 • All posts by \"serverless\" tag",
    "description": "Mean 个人博客",
    "home_page_url": "https://blog.meancoder.xyz",
    "items": [
        {
            "id": "https://blog.meancoder.xyz/2022/wecom-push-api/",
            "url": "https://blog.meancoder.xyz/2022/wecom-push-api/",
            "title": "利用 Vercel 搭建企业微信消息推送 API",
            "date_published": "2022-02-04T14:56:11.000Z",
            "content_html": "<p><a href=\"https://vercel.com/\">Vercel</a>\n是一个用于前端框架和静态站点的平台，可以用来部署静态网站和 Serverless\n函数，功能强大，使用方便。</p>\n<p><a\nhref=\"https://developer.work.weixin.qq.com/\">企业微信</a>提供一系列的\nAPI 接口，可以通过企业微信应用或群机器人发送消息，而且企业微信接入了 <a\nhref=\"https://dev.mi.com/console/appservice/push.html\">MiPush</a>，在\nMIUI 系统上可以无后台接收消息。</p>\n<span id=\"more\"></span>\n<p>但是发送企业微信应用消息比较麻烦，要先通过<code>corpid</code>和<code>corpsecret</code>获取<code>access_token</code>，然后通过\nPOST 请求发送消息。所以我利用 Vercel 搭建了一个 Serverless\n函数，只需要一个<code>token</code>就可以发送消息，非常方便。</p>\n<h2 id=\"接口说明\">接口说明</h2>\n<p>请求地址为https://api.meancoder.xyz/push，参数如下：</p>\n<table>\n<thead>\n<tr class=\"header\">\n<th>参数</th>\n<th>必须</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr class=\"odd\">\n<td>token</td>\n<td>是</td>\n<td>在环境变量中设置的<code>TOKEN</code>，用于验证身份</td>\n</tr>\n<tr class=\"even\">\n<td>content</td>\n<td>是</td>\n<td>消息内容</td>\n</tr>\n<tr class=\"odd\">\n<td>msgtype</td>\n<td>否</td>\n<td><code>text</code>或<code>markdown</code>，默认为<code>text</code></td>\n</tr>\n<tr class=\"even\">\n<td>touser</td>\n<td>否</td>\n<td>指定接收消息的成员，默认为<code>Mean</code></td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"代码\">代码</h2>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># -*- coding: utf8 -*-</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\"><span class=\"keyword\">import</span> json</span><br><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\"><span class=\"keyword\">import</span> urllib.parse</span><br><span class=\"line\"><span class=\"keyword\">from</span> http.server <span class=\"keyword\">import</span> BaseHTTPRequestHandler</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">push</span>(<span class=\"params\">content, touser, msgtype</span>):</span><br><span class=\"line\">    params = &#123;</span><br><span class=\"line\">        <span class=\"string\">&#x27;corpid&#x27;</span>: os.environ[<span class=\"string\">&#x27;CORPID&#x27;</span>],</span><br><span class=\"line\">        <span class=\"string\">&#x27;corpsecret&#x27;</span>: os.environ[<span class=\"string\">&#x27;CORPSECRET&#x27;</span>]</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    access_token = json.loads(requests.get(</span><br><span class=\"line\">        <span class=\"string\">&#x27;https://qyapi.weixin.qq.com/cgi-bin/gettoken&#x27;</span>, params=params).text)[<span class=\"string\">&#x27;access_token&#x27;</span>]</span><br><span class=\"line\">    push_url = <span class=\"string\">&#x27;https://qyapi.weixin.qq.com/cgi-bin/message/send?access_token=&#x27;</span>+access_token</span><br><span class=\"line\">    data = &#123;</span><br><span class=\"line\">        <span class=\"string\">&#x27;msgtype&#x27;</span>: msgtype,</span><br><span class=\"line\">        <span class=\"string\">&#x27;agentid&#x27;</span>: os.environ[<span class=\"string\">&#x27;AGENTID&#x27;</span>],</span><br><span class=\"line\">        msgtype: &#123;</span><br><span class=\"line\">            <span class=\"string\">&#x27;content&#x27;</span>: content</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        <span class=\"string\">&#x27;touser&#x27;</span>: touser</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    response = requests.post(push_url, json=data)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> response.text</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">handler</span>(<span class=\"title class_ inherited__\">BaseHTTPRequestHandler</span>):</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">do_GET</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        errcode = <span class=\"number\">0</span></span><br><span class=\"line\">        errmsg = <span class=\"string\">&quot;ok&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        content = <span class=\"string\">&quot;&quot;</span></span><br><span class=\"line\">        touser = <span class=\"string\">&quot;Mean&quot;</span></span><br><span class=\"line\">        msgtype = <span class=\"string\">&quot;text&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        datas = urllib.parse.parse_qs(self.path.split(<span class=\"string\">&quot;?&quot;</span>)[<span class=\"number\">1</span>])</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"string\">&quot;token&quot;</span> <span class=\"keyword\">not</span> <span class=\"keyword\">in</span> datas:</span><br><span class=\"line\">            errcode = -<span class=\"number\">1</span></span><br><span class=\"line\">            errmsg = <span class=\"string\">&quot;no token&quot;</span></span><br><span class=\"line\">        <span class=\"keyword\">elif</span> datas[<span class=\"string\">&quot;token&quot;</span>][<span class=\"number\">0</span>] != os.environ[<span class=\"string\">&quot;TOKEN&quot;</span>]:</span><br><span class=\"line\">            errcode = -<span class=\"number\">2</span></span><br><span class=\"line\">            errmsg = <span class=\"string\">&quot;invalid token&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"string\">&quot;content&quot;</span> <span class=\"keyword\">in</span> datas:</span><br><span class=\"line\">            content = datas[<span class=\"string\">&quot;content&quot;</span>][<span class=\"number\">0</span>]</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            errcode = -<span class=\"number\">3</span></span><br><span class=\"line\">            errmsg = <span class=\"string\">&quot;no content&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"string\">&quot;touser&quot;</span> <span class=\"keyword\">in</span> datas:</span><br><span class=\"line\">            touser = datas[<span class=\"string\">&quot;touser&quot;</span>][<span class=\"number\">0</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"string\">&quot;msgtype&quot;</span> <span class=\"keyword\">in</span> datas:</span><br><span class=\"line\">            <span class=\"keyword\">if</span> datas[<span class=\"string\">&quot;msgtype&quot;</span>][<span class=\"number\">0</span>] <span class=\"keyword\">not</span> <span class=\"keyword\">in</span> [<span class=\"string\">&quot;text&quot;</span>, <span class=\"string\">&quot;markdown&quot;</span>]:</span><br><span class=\"line\">                errcode = -<span class=\"number\">4</span></span><br><span class=\"line\">                errmsg = <span class=\"string\">&quot;invalid token&quot;</span></span><br><span class=\"line\">            <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                msgtype = datas[<span class=\"string\">&quot;msgtype&quot;</span>][<span class=\"number\">0</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> errcode == <span class=\"number\">0</span>:</span><br><span class=\"line\">            errmsg = push(content, touser, msgtype)</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            errmsg = json.dumps(&#123;<span class=\"string\">&quot;errcode&quot;</span>: errcode, <span class=\"string\">&quot;errmsg&quot;</span>: errmsg&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">        self.send_response(<span class=\"number\">200</span>)</span><br><span class=\"line\">        self.send_header(<span class=\"string\">&#x27;Content-type&#x27;</span>, <span class=\"string\">&#x27;text/plain&#x27;</span>)</span><br><span class=\"line\">        self.end_headers()</span><br><span class=\"line\">        self.wfile.write(errmsg.encode())</span><br><span class=\"line\">        <span class=\"keyword\">return</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"重定向\">重定向</h2>\n<p>由于 api\n要放在<code>/api</code>路径下，默认是通过https://api.meancoder.xyz/api/push发送请求。如果在根目录配置<code>vercel.json</code>文件，就可以把<code>/api</code>重定向到根目录，就能直接通过https://api.meancoder.xyz/push发送请求了。</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;rewrites&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;source&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;/:path*&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;destination&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;/api/:path*&quot;</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">  <span class=\"punctuation\">]</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "Serverless"
            ]
        }
    ]
}